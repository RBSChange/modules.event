<?xml version="1.0" encoding="UTF-8"?>
<actions>
	<action name="createFolder">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_folder', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createNews">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_news', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createEvent">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_event', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createTreefolder">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_treefolder', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createHighlightfolder">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_highlightfolder', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createCategoryfolder">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_categoryfolder', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createCategory">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_category', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="createHighlight">
		<parameter name="listWidget" />
		<body><![CDATA[this.createDocumentEditor('modules_event_highlight', listWidget.getSelectedItems()[0].id);]]></body>
	</action>
	<action name="initDefaultStructure">
		<parameter name="listWidget" />
		<body><![CDATA[
			try
			{
				var params = { 
					module: 'website', 
					allow: 'modules_website_topic,modules_website_systemtopic', 
					single: true, 
					originalModule: this, 
					scriptModuleName: 'event', 
					scriptName: 'globalDefaultStructure'
				};
				getController().openModalDialog(this, 'selectStructureRoot', params);
			}
			catch (e)
			{
				wCore.error('catalog.initDefaultStructure', [], e);
			}
		]]></body>
	</action>
	<action name="initLocalStructure">
		<parameter name="listWidget" />
		<body><![CDATA[
			try
			{
				var params = { 
					module: 'website', 
					allow: 'modules_website_topic,modules_website_systemtopic', 
					single: true, 
					originalModule: this, 
					scriptModuleName: 'event', 
					scriptName: 'localDefaultStructure'
				};
				getController().openModalDialog(this, 'selectStructureRoot', params);
			}
			catch (e)
			{
				wCore.error('catalog.initDefaultStructure', [], e);
			}
		]]></body>
	</action>
	<action name="sendEmailToAuthor">
		<parameter name="listWidget" />
		<body><![CDATA[
			var document = listWidget.getSelectedItems()[0];
			try
			{
				this.getController().openModalDialog(this, 'sendEmailToEventAuthor', {cmpref: document.id, module: this});
			}
			catch (e)
			{
				wCore.error('sendEmailToAuthor', [], e);
				this.refreshMainViewDeck();
			}
		]]></body>
	</action>
	<handler name="comment-basevent" event="registerDocumentEditor"><![CDATA[
		// Action added by comment.implement-on-document
		var editor = event.originalTarget;
		switch (editor.documentname)
		{
			case 'event':
			case 'news':
				editor.addTab('comments', "${trans:m.comment.bo.doceditor.tab.comments,ucf,js}", 'comments');
				if (getController().checkModuleVersion('twitterconnect', '3.0.3'))
				{
					editor.addTab('tweets', "${trans:m.twitterconnect.bo.doceditor.tab.tweets,ucf,js}", 'tweet');
				}
				break;
					
			case 'treefolder':
			case 'category':
			case 'highlight':
				if (getController().checkModuleVersion('twitterconnect', '3.0.3'))
				{
					editor.addTab('containertweets', "${trans:m.twitterconnect.bo.doceditor.tab.automatic-tweets,ucf,js}", 'tweet-planner');
				}
				break;
		}
	]]></handler>
</actions>